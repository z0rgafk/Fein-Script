local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "War Playground",
    LoadingTitle = "War Playground",
    LoadingSubtitle = "by Oxlra",
    ConfigurationSaving = {
       Enabled = false,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Oxlra's War Playground Script"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = false -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "War Playground",
       Subtitle = "Key System",
       Note = "Add me on discord if u need help - Oxlra",
       FileName = "War Playground Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"https://pastebin.com/raw/raXKRzKV"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

local MainTab = Window:CreateTab("Main")
local MainSection = MainTab:CreateSection("Main")

local Toggle = MainTab:CreateToggle({
    Name = "Inf Xp",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if using configuration saving to ensure no overlaps
    Callback = function(Value)
       if Value then
          for i = 1, 200 do -- Change this value to set how many times you want to repeat the process
             local args = {
                [1] = 200
             }
 
             game:GetService("ReplicatedStorage").GXP:FireServer(unpack(args))
 
             wait(0.2) -- Add a delay between each iteration
          end
       end
    end,
 })
